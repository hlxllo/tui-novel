<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.xiaozhao.intern.baseUtil.intf.mapper.BookShelfMapper">

    <insert id="readChapter">
        insert into subscribe_audit (userId, novelId, chapterId)
        values (#{userId}, #{novelId}, #{chapterId})
    </insert>

    <update id="updateTopBook">
        UPDATE bookshelf
        SET isTop = CASE
                        WHEN isTop = 0 THEN 1
                        WHEN isTop = 1 THEN 0
                        ELSE isTop
            END
        WHERE userId = #{userId}
          AND novelId = #{novelId}
          and status != 0
    </update>

    <update id="subscribeBook">
        INSERT INTO bookshelf (userId,
                               novelId,
                               LatestchapterId,
                               BookName,
                               AuthorName,
                               Latestchapter,
                               LastUpdateTime,
                               coverUrl)
        VALUES (#{userId},
                #{novelId},
                #{latestChapterId},
                #{bookName},
                #{authorName},
                #{latestChapter},
                #{lastUpdateTime},
                #{coverUrl}
               );

    </update>

    <update id="updateIsReadByUserIdAndNovelId">
        update bookshelf
        set isRead = 1
        where userId = #{userId}
          and novelId = #{novelId}
          and status != 0

    </update>

    <update id="updateIsReadByNovelId">
        update bookshelf
        set isRead = 0
        where novelId = #{novelId}
        and status != 0
        and userId in (
        <foreach collection="userIds" item="id" separator=",">
            #{id}
        </foreach>
        )
    </update>

    <update id="updateSubscribeAuditChapterId">
        update subscribe_audit
        set chapterId = #{chapterId}
        where userId = #{userId}
          and novelId = #{novelId}
    </update>

    <update id="deleteBookByUserIdAndNovelId">
        update bookshelf
        set status = 0
        where userId = #{userId}
          and novelId = #{novelId}
          and status != 0
    </update>


    <select id="getBookShelfByUserId" resultType="vip.xiaozhao.intern.baseUtil.intf.entity.Bookshelf">
        SELECT id,
               userId,
               novelId,
               LatestchapterId,
               BookName,
               AuthorName,
               Latestchapter,
               LastUpdateTime,
               coverUrl,
               isRead,
               isTop
        FROM bookshelf
        WHERE userId = #{userId}
          AND status != 0
        ORDER BY
            LastUpdateTime DESC;

    </select>

    <select id="getSubscribeAuditByUserIdAndNovelId"
            resultType="vip.xiaozhao.intern.baseUtil.intf.entity.SubscribeAudit">
        SELECT id,
               userId,
               novelId,
               ChapterId
        FROM subscribe_audit
        WHERE userId = #{userId}
          AND novelId = #{novelId}
    </select>
</mapper>